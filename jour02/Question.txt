üìå Job01 : Comment le mod√®le MVC aide-t-il √† structurer une application web ?

    Rappel des Definitions :

        - Model : G√®re la logique m√©tier et l'acc√®s aux donn√©es.
        - View : G√®re l'affichage et l'interface utilisateur.
        - Controller : G√®re les requ√™tes utilisateur et la logique de navigation.

    Spring Boot impl√©mente Spring MVC, o√π :
    Les contr√¥leurs (@Controller ou @RestController) re√ßoivent et traitent les requ√™tes HTTP.
    Les mod√®les (souvent repr√©sent√© par des classes avec @Entity, @Service, @Repository) g√®re les donn√©es et la logique.
    Les vues utilise Thymeleaf pour afficher les donn√©es renvoy√©es par le contr√¥leur.


üñºÔ∏è Job02 : Quelle est la diff√©rence entre Thymeleaf et les templates HTML classiques ?

    Thymeleaf permet d‚Äôinjecter des donn√©es dynamiques venant de Spring Boot, tandis que les templates HTML classiques affichent uniquement du contenu statique.


üì§ Job03 : Comment pouvez-vous passer des donn√©es d'un contr√¥leur √† une vue dans Spring ?

        Les donn√©es sont pass√©es du contr√¥leur √† la vue via l'objet Model, en utilisant model.addAttribute("nomDeLAttribut", sa valeur).
        Ensuite, Thymeleaf r√©cup√®re ces donn√©es dans la vue avec ${nomDeLAttribut} et les affiche dynamiquement.


üìù Job04 : Comment Spring facilite-t-il la gestion des formulaires ?

        Spring facilite la gestion des formulaires en int√©grant Spring MVC et Spring Boot Starter Validation,
        permettant la liaison automatique des donn√©es avec des objets Java via @ModelAttribute et la validation avec @Valid.


‚úÖ Job05: Comment Spring permet-il la validation des donn√©es du formulaire ?

        Spring permet la validation des donn√©es du formulaire gr√¢ce √† Jakarta Validation et l‚Äôannotation @Valid.
        Il utilise des annotations comme @NotEmpty, @Size, et @Min sur les champs de l'objet mod√®le pour imposer des contraintes,
        et BindingResult capture les erreurs afin qu'elles puissent √™tre affich√©es dans la vue avec Thymeleaf.